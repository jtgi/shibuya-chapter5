export const manifoldAbi = [
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "AdminApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "AdminRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "approved", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "operator", type: "address" },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "address", name: "extension", type: "address" }],
    name: "ApproveTransferUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address payable[]", name: "receivers", type: "address[]" },
      { indexed: false, internalType: "uint256[]", name: "basisPoints", type: "uint256[]" },
    ],
    name: "DefaultRoyaltiesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "extension", type: "address" },
      { indexed: false, internalType: "bool", name: "enabled", type: "bool" },
    ],
    name: "ExtensionApproveTransferUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "extension", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "ExtensionBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "extension", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "ExtensionRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "extension", type: "address" },
      { indexed: false, internalType: "address payable[]", name: "receivers", type: "address[]" },
      { indexed: false, internalType: "uint256[]", name: "basisPoints", type: "uint256[]" },
    ],
    name: "ExtensionRoyaltiesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "extension", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "ExtensionUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint8", name: "version", type: "uint8" }],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "extension", type: "address" },
      { indexed: true, internalType: "address", name: "permissions", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "MintPermissionsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
      { indexed: false, internalType: "address payable[]", name: "receivers", type: "address[]" },
      { indexed: false, internalType: "uint256[]", name: "basisPoints", type: "uint256[]" },
    ],
    name: "RoyaltiesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "approveAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "extension", type: "address" }],
    name: "blacklistExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmins",
    outputs: [{ internalType: "address[]", name: "admins", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getApproveTransfer",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExtensions",
    outputs: [{ internalType: "address[]", name: "extensions", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getFeeBps",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getFeeRecipients",
    outputs: [{ internalType: "address payable[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getFees",
    outputs: [
      { internalType: "address payable[]", name: "", type: "address[]" },
      { internalType: "uint256[]", name: "", type: "uint256[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getRoyalties",
    outputs: [
      { internalType: "address payable[]", name: "", type: "address[]" },
      { internalType: "uint256[]", name: "", type: "uint256[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "_name", type: "string" },
      { internalType: "string", name: "_symbol", type: "string" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "isAdmin",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "to", type: "address" }],
    name: "mintBase",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "string", name: "uri", type: "string" },
    ],
    name: "mintBase",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "string[]", name: "uris", type: "string[]" },
    ],
    name: "mintBaseBatch",
    outputs: [{ internalType: "uint256[]", name: "tokenIds", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint16", name: "count", type: "uint16" },
    ],
    name: "mintBaseBatch",
    outputs: [{ internalType: "uint256[]", name: "tokenIds", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "to", type: "address" }],
    name: "mintExtension",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint80", name: "data", type: "uint80" },
    ],
    name: "mintExtension",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "string", name: "uri", type: "string" },
    ],
    name: "mintExtension",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "string[]", name: "uris", type: "string[]" },
    ],
    name: "mintExtensionBatch",
    outputs: [{ internalType: "uint256[]", name: "tokenIds", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint80[]", name: "data", type: "uint80[]" },
    ],
    name: "mintExtensionBatch",
    outputs: [{ internalType: "uint256[]", name: "tokenIds", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint16", name: "count", type: "uint16" },
    ],
    name: "mintExtensionBatch",
    outputs: [{ internalType: "uint256[]", name: "tokenIds", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "extension", type: "address" },
      { internalType: "string", name: "baseURI", type: "string" },
    ],
    name: "registerExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "extension", type: "address" },
      { internalType: "string", name: "baseURI", type: "string" },
      { internalType: "bool", name: "baseURIIdentical", type: "bool" },
    ],
    name: "registerExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "revokeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "uint256", name: "value", type: "uint256" },
    ],
    name: "royaltyInfo",
    outputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "extension", type: "address" }],
    name: "setApproveTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bool", name: "enabled", type: "bool" }],
    name: "setApproveTransferExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "uri", type: "string" }],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "uri", type: "string" }],
    name: "setBaseTokenURIExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "uri", type: "string" },
      { internalType: "bool", name: "identical", type: "bool" },
    ],
    name: "setBaseTokenURIExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "extension", type: "address" },
      { internalType: "address", name: "permissions", type: "address" },
    ],
    name: "setMintPermissions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "address payable[]", name: "receivers", type: "address[]" },
      { internalType: "uint256[]", name: "basisPoints", type: "uint256[]" },
    ],
    name: "setRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address payable[]", name: "receivers", type: "address[]" },
      { internalType: "uint256[]", name: "basisPoints", type: "uint256[]" },
    ],
    name: "setRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "extension", type: "address" },
      { internalType: "address payable[]", name: "receivers", type: "address[]" },
      { internalType: "uint256[]", name: "basisPoints", type: "uint256[]" },
    ],
    name: "setRoyaltiesExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "string", name: "uri", type: "string" },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256[]", name: "tokenIds", type: "uint256[]" },
      { internalType: "string[]", name: "uris", type: "string[]" },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256[]", name: "tokenIds", type: "uint256[]" },
      { internalType: "string[]", name: "uris", type: "string[]" },
    ],
    name: "setTokenURIExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "string", name: "uri", type: "string" },
    ],
    name: "setTokenURIExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "prefix", type: "string" }],
    name: "setTokenURIPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "prefix", type: "string" }],
    name: "setTokenURIPrefixExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenData",
    outputs: [{ internalType: "uint80", name: "", type: "uint80" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenExtension",
    outputs: [{ internalType: "address", name: "extension", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "extension", type: "address" }],
    name: "unregisterExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export const claimAbi = [
  {
    inputs: [
      { internalType: "address", name: "initialOwner", type: "address" },
      { internalType: "address", name: "delegationRegistry", type: "address" },
      { internalType: "address", name: "delegationRegistryV2", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "ClaimInactive", type: "error" },
  { inputs: [], name: "ClaimNotInitialized", type: "error" },
  { inputs: [], name: "ExpiredSignature", type: "error" },
  { inputs: [], name: "FailedToTransfer", type: "error" },
  { inputs: [], name: "InvalidAirdrop", type: "error" },
  { inputs: [], name: "InvalidInput", type: "error" },
  { inputs: [], name: "InvalidInstance", type: "error" },
  { inputs: [], name: "InvalidSignature", type: "error" },
  { inputs: [], name: "InvalidStartDate", type: "error" },
  { inputs: [], name: "InvalidStorageProtocol", type: "error" },
  { inputs: [], name: "MustUseSignatureMinting", type: "error" },
  { inputs: [], name: "TokenDNE", type: "error" },
  { inputs: [], name: "TooManyRequested", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "AdminApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "address", name: "sender", type: "address" },
    ],
    name: "AdminRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "creatorContract", type: "address" },
      { indexed: true, internalType: "uint256", name: "instanceId", type: "uint256" },
      { indexed: false, internalType: "address", name: "initializer", type: "address" },
    ],
    name: "ClaimInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "creatorContract", type: "address" },
      { indexed: true, internalType: "uint256", name: "instanceId", type: "uint256" },
    ],
    name: "ClaimMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "creatorContract", type: "address" },
      { indexed: true, internalType: "uint256", name: "instanceId", type: "uint256" },
      { indexed: false, internalType: "uint16", name: "mintCount", type: "uint16" },
    ],
    name: "ClaimMintBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "creatorContract", type: "address" },
      { indexed: true, internalType: "uint256", name: "instanceId", type: "uint256" },
      { indexed: false, internalType: "uint16", name: "mintCount", type: "uint16" },
      { indexed: false, internalType: "address", name: "proxy", type: "address" },
      { indexed: false, internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "ClaimMintProxy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "creatorContract", type: "address" },
      { indexed: true, internalType: "uint256", name: "instanceId", type: "uint256" },
      { indexed: false, internalType: "uint16", name: "mintCount", type: "uint16" },
      { indexed: false, internalType: "address", name: "proxy", type: "address" },
      { indexed: false, internalType: "address", name: "mintFor", type: "address" },
      { indexed: false, internalType: "bytes32", name: "nonce", type: "bytes32" },
    ],
    name: "ClaimMintSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "creatorContract", type: "address" },
      { indexed: true, internalType: "uint256", name: "instanceId", type: "uint256" },
    ],
    name: "ClaimUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_REGISTRY",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DELEGATION_REGISTRY_V2",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEMBERSHIP_ADDRESS",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_FEE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_FEE_MERKLE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "address[]", name: "recipients", type: "address[]" },
      { internalType: "uint16[]", name: "amounts", type: "uint16[]" },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "approveAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint32", name: "mintIndex", type: "uint32" },
    ],
    name: "checkMintIndex",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint32[]", name: "mintIndices", type: "uint32[]" },
    ],
    name: "checkMintIndices",
    outputs: [{ internalType: "bool[]", name: "minted", type: "bool[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "string", name: "locationChunk", type: "string" },
    ],
    name: "extendTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmins",
    outputs: [{ internalType: "address[]", name: "admins", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
    ],
    name: "getClaim",
    outputs: [
      {
        components: [
          { internalType: "uint32", name: "total", type: "uint32" },
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          { internalType: "enum ILazyPayableClaim.StorageProtocol", name: "storageProtocol", type: "uint8" },
          { internalType: "uint8", name: "contractVersion", type: "uint8" },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          { internalType: "address payable", name: "paymentReceiver", type: "address" },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.Claim",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "getClaimForToken",
    outputs: [
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "total", type: "uint32" },
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          { internalType: "enum ILazyPayableClaim.StorageProtocol", name: "storageProtocol", type: "uint8" },
          { internalType: "uint8", name: "contractVersion", type: "uint8" },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          { internalType: "address payable", name: "paymentReceiver", type: "address" },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.Claim",
        name: "claim",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "minter", type: "address" },
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
    ],
    name: "getTotalMints",
    outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          { internalType: "enum ILazyPayableClaim.StorageProtocol", name: "storageProtocol", type: "uint8" },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          { internalType: "address payable", name: "paymentReceiver", type: "address" },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.ClaimParameters",
        name: "claimParameters",
        type: "tuple",
      },
    ],
    name: "initializeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "isAdmin",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint32", name: "mintIndex", type: "uint32" },
      { internalType: "bytes32[]", name: "merkleProof", type: "bytes32[]" },
      { internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint16", name: "mintCount", type: "uint16" },
      { internalType: "uint32[]", name: "mintIndices", type: "uint32[]" },
      { internalType: "bytes32[][]", name: "merkleProofs", type: "bytes32[][]" },
      { internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint16", name: "mintCount", type: "uint16" },
      { internalType: "uint32[]", name: "mintIndices", type: "uint32[]" },
      { internalType: "bytes32[][]", name: "merkleProofs", type: "bytes32[][]" },
      { internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "mintProxy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint16", name: "mintCount", type: "uint16" },
      { internalType: "bytes", name: "signature", type: "bytes" },
      { internalType: "bytes32", name: "message", type: "bytes32" },
      { internalType: "bytes32", name: "nonce", type: "bytes32" },
      { internalType: "address", name: "mintFor", type: "address" },
      { internalType: "uint256", name: "expiration", type: "uint256" },
    ],
    name: "mintSignature",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "revokeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "membershipAddress", type: "address" }],
    name: "setMembershipAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "uri", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          { internalType: "enum ILazyPayableClaim.StorageProtocol", name: "storageProtocol", type: "uint8" },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          { internalType: "address payable", name: "paymentReceiver", type: "address" },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.ClaimParameters",
        name: "claimParameters",
        type: "tuple",
      },
    ],
    name: "updateClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "creatorContractAddress", type: "address" },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "enum ILazyPayableClaim.StorageProtocol", name: "storageProtocol", type: "uint8" },
      { internalType: "bool", name: "identical", type: "bool" },
      { internalType: "string", name: "location", type: "string" },
    ],
    name: "updateTokenURIParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address payable", name: "receiver", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;
